name: GitHub Actions Demo
on: [push]
jobs:
  Deploy-bootstrap-resources:
    runs-on: ubuntu-latest
    environment: BootstrapEnv
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-1
    steps:
      - run: curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      - run: unzip awscliv2.zip
      - run: sudo ./aws/install --update
      - run: aws --version
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: cat cloudformation/bootstrap_resources.yml
      - name: Validates CloudFormation template
        run: aws cloudformation validate-template --template-body file://cloudformation/bootstrap_resources.yml
      - name: Deploys CloudFormation template
        run: |
         aws cloudformation deploy --template-file cloudformation/bootstrap_resources.yml --stack-name BootstrapResources --capabilities CAPABILITY_IAM
         aws cloudformation list-exports | jq -r '.Exports[] | select(.Name=="BootstrapResources-RoleArn") | .Value' > rolearn.txt
         cat rolearn.txt
         aws cloudformation list-exports | jq -r '.Exports[] | select(.Name=="BootstrapResources-CloudFormationTemplatesBucketName") | .Value' > cfbucketname.txt
         date -u +"%Y/%m/%d/%H/%M/%S" > cfkeyprefix.txt
         cat cfkeyprefix.txt
      - name: Upload bucket prefix
        uses: actions/upload-artifact@v2
        with:
          name: cfkeyprefix
          path: cfkeyprefix.txt
      - name: Upload role ARN
        uses: actions/upload-artifact@v2
        with:
          name: rolearn
          path: rolearn.txt
      - name: Upload bucket name
        uses: actions/upload-artifact@v2
        with:
          name: cfbucketname
          path: cfbucketname.txt
      - run: echo "🍏 This job's status is ${{ job.status }}."
  Validate-template-and-upload-to-s3:
    runs-on: ubuntu-latest
    needs: Deploy-bootstrap-resources
    environment: InfrastructureEnv
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-1
    steps:
      - name: Download key prefix
        uses: actions/download-artifact@v2
        with:
          name: cfkeyprefix
      - name: Download bucket name
        uses: actions/download-artifact@v2
        with:
          name: cfbucketname
      - name: Download role ARN
        uses: actions/download-artifact@v2
        with:
          name: rolearn
      - run: curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      - run: unzip awscliv2.zip
      - run: sudo ./aws/install --update
      - run: aws --version
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: ls ${{ github.workspace }}
      - name: Validates template and uploads to S3
        run: |
          export AWS_ROLE_ARN=$(cat rolearn.txt)
          export STS_CREDENTIALS=$(aws sts assume-role --role-arn $AWS_ROLE_ARN --role-session-name ValidateAndS3UploadTemplatesSession | jq -r '.Credentials') >/dev/null 2>&1      - run: echo "🍏 This job's status is ${{ job.status }}."
          export AWS_ACCESS_KEY_ID_STS=$(echo $STS_CREDENTIALS | jq -r '.AccessKeyId') >/dev/null 2>&1
          export AWS_SECRET_ACCESS_KEY_STS=$(echo $STS_CREDENTIALS | jq -r '.SecretAccessKey') >/dev/null 2>&1
          export AWS_SESSION_TOKEN_STS=$(echo $STS_CREDENTIALS | jq -r '.SessionToken') >/dev/null 2>&1
          export AWS_ACCESS_KEY_ID=$(echo $AWS_ACCESS_KEY_ID_STS) >/dev/null 2>&1
          export AWS_SECRET_ACCESS_KEY=$(echo $AWS_SECRET_ACCESS_KEY_STS) >/dev/null 2>&1
          export AWS_SESSION_TOKEN=$(echo $AWS_SESSION_TOKEN_STS) >/dev/null 2>&1
          export CF_BUCKET=s3://$(cat cfbucketname.txt)
          export CF_KEY_PREFIX=$(cat cfkeyprefix.txt)
          cat cloudformation/cloudformation_template.yml
          aws cloudformation validate-template --template-body file://cloudformation/cloudformation_template.yml
          cat cloudformation/vpc.yml
          aws cloudformation validate-template --template-body file://cloudformation/vpc.yml
          aws s3 cp cloudformation/vpc.yml $CF_BUCKET/$CF_KEY_PREFIX/
          cat cloudformation/kubernetes_infrastructure.yml
          aws cloudformation validate-template --template-body file://cloudformation/kubernetes_infrastructure.yml
          aws s3 cp cloudformation/kubernetes_infrastructure.yml $CF_BUCKET/$CF_KEY_PREFIX/