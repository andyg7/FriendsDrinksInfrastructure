---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Amazon CloudFormation deployer role resources'

Resources:
  CloudFormationNestedStackTemplatesBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Join:
          - "-"
          - - "cf-templates"
            - !Ref "AWS::Region"
            - !Ref "AWS::AccountId"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
         -  ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  KubernetesClusterAdminRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Sub 'arn:aws:iam::${AWS::AccountId}:user/CloudFormationDeployerUser'
                - !Sub 'arn:aws:iam::${AWS::AccountId}:user/KubernetesManifestDeployerUser'
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
        - arn:aws:iam::aws:policy/IAMFullAccess
        - arn:aws:iam::aws:policy/AmazonEC2FullAccess
      Policies:
        - PolicyName: EKSFullAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 'eks:*'
                Resource: '*'
        - PolicyName: LambdaFullAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 'lambda:*'
                Resource: '*'

Outputs:
  RoleArn:
    Description: The role used to deploy all other CloudFormation
    Value: !GetAtt KubernetesClusterAdminRole.Arn
    Export:
      Name: !Sub "${AWS::StackName}-RoleArn"
  BucketName:
    Description: The bucket for CloudFormation templates
    Value: !Ref CloudFormationNestedStackTemplatesBucket
    Export:
      Name: !Sub "${AWS::StackName}-BucketName"
